"use strict";(self.webpackChunko_2_ui=self.webpackChunko_2_ui||[]).push([[4863],{5919:(e,n,r)=>{r.d(n,{A:()=>h});var s=r(7673);r(6540);const c="colorRed_zfsU",o="colorGreen_BgmQ",i="colorBlue_mWYT",l="colorPurple_ivHi",a="colorOrange_olUR";var t=r(7563),d=r(4848);const h=e=>{const{icon:n,colors:r}=e;return(0,d.jsx)(t.A,{children:r.map(e=>{const r=(e=>{switch(e){case"red":return c;case"orange":return a;case"green":return o;case"blue":return i;case"purple":return l;default:return""}})(e);return(0,d.jsx)(s.X,{className:r,icon:n,width:60,height:60})})})}},7827:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"carmore-icon/usage","title":"Usage","description":"Import styles","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/carmore-icon/usage.mdx","sourceDirName":"carmore-icon","slug":"/carmore-icon/usage","permalink":"/en/docs/carmore-icon/usage","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"usage","title":"Usage","pagination_next":null},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/en/docs/carmore-icon/installation"}}');var c=r(4848),o=r(8453),i=(r(1246),r(123)),l=r(5919),a=r(5356);const t={id:"usage",title:"Usage",pagination_next:null},d="Usage",h={},u=[{value:"Import styles",id:"import-styles",level:2},{value:"Tailwind projects",id:"tailwind-projects",level:3},{value:"Set global defaults",id:"set-global-defaults",level:2},{value:"Control size",id:"control-size",level:2},{value:"Change color",id:"change-color",level:2},{value:"Accessibility (a11y)",id:"accessibility-a11y",level:2}];function x(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"usage",children:"Usage"})}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)(n.h2,{id:"import-styles",children:"Import styles"}),"\n",(0,c.jsxs)(n.p,{children:["To apply the default icon styles, import the CSS file in your project entry point (for example ",(0,c.jsx)(n.code,{children:"src/main.tsx"})," or ",(0,c.jsx)(n.code,{children:"src/index.tsx"}),")."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-tsx",children:"// src/main.tsx\n\nimport '@o2-ui/carmore-icon/index.css';\n"})}),"\n",(0,c.jsx)(n.p,{children:"Or include it inside your global styles so every page picks it up automatically."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-css",children:"/* src/styles/global.css */\n\n@import '@o2-ui/carmore-icon/index.css';\n"})}),"\n",(0,c.jsx)(n.h3,{id:"tailwind-projects",children:"Tailwind projects"}),"\n",(0,c.jsxs)(n.p,{children:["When you use Tailwind, place the icon CSS before the ",(0,c.jsx)(n.code,{children:"@tailwind"})," directives. That way you can keep customizing icon color, size, and more with Tailwind utility classes."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-css",children:"/* src/styles/globals.css */\n\n/* Icon base styles */\n@import '@o2-ui/carmore-icon/index.css';\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n"})}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)(n.h2,{id:"set-global-defaults",children:"Set global defaults"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsxs)(n.p,{children:["! Every icon class name starts with ",(0,c.jsx)(n.code,{children:"o2-ui-carmore-icon-"}),"."]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"Add the following rules to your global CSS to update the default color (and dark mode color) for every icon at once."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-css",children:"/* src/styles/global.css */\n\n[class^='o2-ui-carmore-icon-'] {\n  color: #999; /* Default icon color */\n}\n\n.dark [class^='o2-ui-carmore-icon-'] {\n  color: #ddd; /* Dark mode */\n}\n"})}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)(n.h2,{id:"control-size",children:"Control size"}),"\n",(0,c.jsxs)(n.p,{children:["You can control the icon size with the ",(0,c.jsx)(n.code,{children:"width"})," and ",(0,c.jsx)(n.code,{children:"height"})," props."]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["Pass numbers directly, or strings with units such as px, rem, or %.","\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"(The icon keeps its intrinsic aspect ratio and cannot be stretched.)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(a.A,{icon:"user",sizes:["1.5rem",30,"48px","5rem"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-tsx",children:"<CarmoreIcon icon={'user'} ... /> // Uses the default ('1.5rem')\n<CarmoreIcon icon={'user'} width={30} height={30} ... />\n<CarmoreIcon icon={'user'} width={'48px'} height={'48px'} ... />\n<CarmoreIcon icon={'user'} width={'5rem'} height={'5rem'} ... />\n"})}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)(n.h2,{id:"change-color",children:"Change color"}),"\n",(0,c.jsxs)(n.p,{children:["Set the text color via the ",(0,c.jsx)(n.code,{children:"className"})," prop to recolor the icon."]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"The default color is defined by your global CSS."}),"\n",(0,c.jsx)(n.li,{children:"Some icons have limited color customization. Check each icon's detail page for specifics."}),"\n"]}),"\n",(0,c.jsx)(l.A,{icon:"check",colors:["red","orange","green","blue","purple"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-css",children:".text-red {\n  color: red;\n}\n\n.text-orange {\n  color: orange;\n}\n\n.text-green {\n  color: green;\n}\n\n.text-blue {\n  color: blue;\n}\n\n.text-purple {\n  color: purple;\n}\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-tsx",children:"<CarmoreIcon icon={'check'} className={'text-red'} ... />\n<CarmoreIcon icon={'check'} className={'text-orange'} ... />\n<CarmoreIcon icon={'check'} className={'text-green'}  ... />\n<CarmoreIcon icon={'check'} className={'text-blue'}  ... />\n<CarmoreIcon icon={'check'} className={'text-purple'}  ... />\n"})}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)("br",{}),"\n",(0,c.jsx)(n.h2,{id:"accessibility-a11y",children:"Accessibility (a11y)"}),"\n",(0,c.jsxs)(n.p,{children:["We recommend configuring attributes such as ",(0,c.jsx)(n.code,{children:"role"})," and ",(0,c.jsx)(n.code,{children:"aria-label"}),"."]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"Base accessibility defaults are provided, and you can override them when needed."}),"\n",(0,c.jsx)(n.li,{children:(0,c.jsx)(n.em,{children:"(Hover the icon to check the tooltip.)"})}),"\n"]}),"\n",(0,c.jsx)(i.A,{icon:"back-btn",ariaLabels:[void 0,"Arrow","Left arrow"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-tsx",children:"<CarmoreIcon icon={'back-btn'} ... /> // Uses the default ('Go back')\n<CarmoreIcon icon={'back-btn'} aria-label={'Arrow'} ... />\n<CarmoreIcon icon={'back-btn'} aria-label={'Left arrow'} ... />\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(x,{...e})}):x(e)}}}]);